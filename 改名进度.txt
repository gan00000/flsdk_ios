AD工程：
——GamaAdPort.h———
#define GAMA_AD_NEED_ACCESS_SERVER @"GAMA_AD_NEED_ACCESS_SERVER"


——GamaAdInfo.h———
//保存是否访问过广告服务器接口
#define SP_AD_USERDEFAULT_KEY           @"SP_AD_USERDEFAULT_KEY"
#define SP_THIRD_AD_USERDEFAULT_KEY     @"SP_THIRD_AD_USERDEFAULT_KEY"



CDN工程
———Gama_CDNDownlaod.m———
    NSString *textPath = [libPath stringByAppendingFormat:@"/Caches/spDomainFile"];

———GamaSDK_DES3Util.m———-
#define gkey @"(starpy99988820170227dyrl)"
#define gIv  @"10000000"

———Note———
查看CDN请求返回结果；

Facebook工程：
尚未开始


1.核心工程：

	<--------- GamaCoreConfReader.m ----->

NSString *targetPath = [NSHomeDirectory() stringByAppendingPathComponent:[NSString stringWithFormat:@"Documents/%@.plist",GAMA_INFO_PLIST_NAME]];
NSString *appVersionPath = [NSHomeDirectory() stringByAppendingPathComponent:@"Documents/gamaGameVersion.txt"];
NSString *appVersionOld = [NSString stringWithContentsOfFile:appVersionPath encoding:NSUTF8StringEncoding error:nil];
NSString *appVersionNow = [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"];
NSFileManager *fileManager = [NSFileManager defaultManager];
//读取bundle
NSURL *GamaBundleURL = [[NSBundle mainBundle] URLForResource:@"GamaResources"
                                                   withExtension:@"bundle"];
NSBundle *gamaBundle = nil;

	<--------- GamaSecurty.h ----->//Note:是否有傳給服務端的值

#define GAMA_CONF_DEFAULT_KEY    @"GAMA128KEY"                  //文件加密时候使用的Key参数
#define GAMA_CONF_DEFAULT_IV     @"GAMA128IV"                   //文件加密时候使用的iv参数


	<--------- GamaCfUUID.m ----->//Note:此處改動會牽扯到免註冊用戶；（未改）
NSDictionary *query = [NSDictionary dictionaryWithObjectsAndKeys:
                           kSecClassGenericPassword, kSecClass,
                           @"com.starpy.bundleSeedID", kSecAttrAccount,
                           @"", kSecAttrService,
                           (id)kCFBooleanTrue, kSecReturnAttributes,
                           nil];
//获取itemWrapper
GamaKeychainItemWrapper *wrapper = [[GamaKeychainItemWrapper alloc] initWithIdentifier:@"GAMA_UID"
                                           accessGroup:[NSString stringWithFormat:@"%@.com.starpyKeyChainGroup", [GamaCfUUID bundleSeedID]]];


2.登錄工程：
SP通知：
SP_FACEBOOK_LOGIN_SUCCESS 
GAMA_FACEBOOK_LOGIN_SUCCESS

SP_EVATAR_LOGIN_SUCCESS
GAMA_EVATAR_LOGIN_SUCCESS


	<--------- findPassword.m ----->

 //紀錄上次登陸的用戶信息
 NSDictionary * thisUserInfoDic=[NSDictionary dictionaryWithObjectsAndKeys:
                   tmpUserName,@"SPLastUserName",
                   @"",@"SPLastUserPassword",nil];

	<--------- gisterAccount.m ----->
//for the Platform
  [self saveUiserInfoForThePlatformWith:@"sp"
                             andLoginId:@""
                              andUserId:[NSString stringWithFormat:@"%@",resultJsonDic[@"userid"]]];

//记录登录成功的信息
[GamaUserInfoModel shareInfoModel].gamaUID = [NSString stringWithFormat:@"%@",resultJsonDic[@"userId"]];
[GamaUserInfoModel shareInfoModel].timestamp = [NSString stringWithFormat:@"%@",resultJsonDic[@"timestamp"]];
[GamaUserInfoModel shareInfoModel].accessToken = resultJsonDic[@"accessToken"];
[[GamaUserInfoModel shareInfoModel] setLoginTypeWithStr:@"sp"];



3.Facebook工程

	<--------- FacebookImp.m ----->

[[NSNotificationCenter defaultCenter] postNotificationName:@"SP_httpRequest_SharingResult"
                                                        object:nil
                                                      userInfo:@{@"code":@"1000",@"message":SP_GET_INFO(SP_SHARE_TEXT_SHARE_SUCCESS)}];

	<--------- GamaFacebookPort.m ----->

#define SP_FACEBOOK_LOGIN_SUCCESS   @"SP_FACEBOOK_LOGIN_SUCCESS"   //facebook登陆成功
#define SP_FACEBOOK_LOGIN_FAIL      @"SP_FACEBOOK_LOGIN_FAIL"      //facebook登陆失败
#define SP_FACEBOOK_BINDING_SUCCESS @"SP_FACEBOOK_BINDING_SUCCESS" //facebook绑定成功
#define SP_FACEBOOK_BINDING_FAIL    @"SP_FACEBOOK_BINDING_FAIL"    //facebook绑定失败
#define SP_FB_SHARE_SUCCESS_IN      @"SP_FB_SHARE_SUCCESS"         //facebook分享成功
#define SP_FB_SHARE_FAIL_IN         @"SP_FB_SHARE_FAIL"            //facebook分享失败


4.guestLogin工程

	<--------- GamaFreeLogininInfo.m ----->

#define SP_GET_FREE_LOGIN_TIMES_AND_BIND_SUCCESS @"SP_GET_FREE_LOGIN_TIMES_AND_BIND_SUCCESS" //获取免注册登录次数和绑定信息成功
#define SP_GET_FREE_LOGIN_TIMES_AND_BIND_FAIL    @"SP_GET_FREE_LOGIN_TIMES_AND_BIND_FAIL"    //获取免注册登录次数和绑定信息失败
#define SP_FREE_LOGIN_SUCCESS_IN                 @"SP_FREE_LOGIN_SUCCESS_IN"                 //免注册登陆成功
#define SP_FREE_LOGIN_FALI_IN                    @"SP_FREE_LOGIN_FALI_IN"                    //免注册登陆失败
#define SP_FREE_BIND_SUCCESS_IN                  @"SP_FREE_BIND_SUCCESS_IN"                  //免注册绑定成功
#define SP_FREE_BIND_FAIL_IN                     @"SP_FREE_BIND_FAIL_IN"                     //免注册绑定失败

#define SP_FREE_LOGIN_TIMES_INFO_KEY      @"SP_FREE_LOGIN_TIMES_INFO_KEY"



5.IAP工程；

	<--------- GamaIapInfo.h ----->


#define SP_IAP_LOG(flag) if([SPCoreConfReader reader].ISPRINT){NSLog(@"_iap_log:%@",flag);}
#define SP_NIL                          @"SP_NIL_FLAG"                                      //Gama定义的空填充字符串
#define SP_ONE_PURCHASE_INFO_KEY        @"SP_ONE_PURCHASE_INFO_KEY"                         //一笔购买的本地保存KEY
#define SP_ONE_PURCHASE_PROCESS_LOG_KEY @"SP_ONE_PURCHASE_PROCESS_LOG_KEY"                  //购买的过程日志KEY
#define SP_THE_DIFFIENTE_SP_ORDER_IDS_KEY @"bfwCL9Dc739gK7OFdFEwyDdZLkuZWwP+3OJJvPhgiXPIjyZSIKRFBqhArdeMCOPA"

#define SP_IAP_URLSCHEME_MARK           @"_IAP_CALL_BACK_URLSCHEME_"
#define SP_IAP_URLSCHEME_POST_ALL       @"postAllHistory"

/*购买成功或者失败的广播名字*/
#define SP_PHCHASE_SUCCESS_IN @"SPPHCHASESUCCESSFUL" //购买商品成功
#define SP_PHCHASE_FAIL_IN    @"SPPHCHASEFAIL"       //购买商品失败
#define SP_PHCHASE_PUCHASING_IN  @"SPPHCHASING"          //购买商品中

#define SP_CURRENCY_CODE_DEFAULT_VALUE @"0"


/*当前交易的状态*/
#define SP_PARCHASE_WAIT_SP_SERVER_ORDERID             @"SP_PARCHASE_WAIT_SP_SERVER_ORDERID"             //等待SP服务器返回orderid状态
#define SP_PARCHASE_GET_SP_ORDERID_WAIT_PAY_RESULT     @"SP_PARCHASE_GET_SP_ORDERID_WAIT_PAY_RESULT"     //獲取SP orderid成功，等待支付結果
#define SP_PARCHASE_APPLE_PAY_SUCCESS_WAIT_POST_RESOURT  @"APPLE_PAY_SUCCESS_WAIT_POST_RESOURT"                //苹果支付成功，开始给SP服务器验证
#define SP_PARCHASE_APPLE_PAY_FAIL_WAIT_TELL_SP_SERVER @"SP_PARCHASE_APPLE_PAY_FAIL_WAIT_TELL_SP_SERVER" //苹果服务器支付失败，等待告知服务器结果


	<--------- GamaIapTransactionRecorder.h ----->

#define SP_ALL_TRANSACTIONS @"SP_ALL_TRANSACTIONS"
#define SP_USER_POST_PAY_REPORT_TO_SP_SERVER_FINISHED @"SP_USER_POST_PAY_REPORT_TO_SP_SERVER_FINISHED"
#define SP_ONE_PURCHASE_PROCESS_LOG_KEY                           @"SP_ONE_PURCHASE_PROCESS_LOG_KEY" //一笔购买的过程日志KEY


6.工程集合

	<--------- GamaLoginViewModel.m ----->

static NSString *loginEvent        =   @"starpy_login_event_ios";
static NSString *registerEvent     =   @"starpy_register_event_ios";


	<--------- GamaSDK.m ----->

// 通知类型
NSString *const GAMA_LOGIN_SUCCUESS    = @"CONST_SP_LOGIN_SUCCUESS";
//NSString *const SP_LOGIN_FAIL        = @"CONST_SP_LOGIN_FAIL";//保留
NSString *const GAMA_PAY_SUCCUESS      = @"CONST_SP_PAY_SUCCUESS";
NSString *const GAMA_PAY_PUCHESSING    = @"CONST_SP_PAY_PUCHESSING";
NSString *const GAMA_PAY_FAIL          = @"CONST_SP_PAY_FAIL";
NSString *const GAMA_SHARE_RESULT          = @"CONST_SP_SHARE_RESULT";

// 充值类型
NSString *const GAMA_PAY_MODE_DEFAULT      = @"SP_pay_mode_default";
NSString *const GAMA_PAY_MODE_WEB          = @"SP_pay_mode_web";

// web
NSString *const GAMA_PRM_WEB_MODE          = @"py_param_web_type";
NSString *const GAMA_PRM_WEB_URL           = @"py_param_web_url";

NSString *const GAMA_WEB_MODE_CP           = @"SP_web_mode_cp";
NSString *const GAMA_WEB_MODE_SDK          = @"SP_web_mode_sdk";












共用：
    NSString *keyPath=[NSHomeDirectory()stringByAppendingPathComponent:@"Library"];
    NSString *printFileName = @"sp_print_file.txt";
    NSString *printfPath = [keyPath stringByAppendingFormat:@"/Caches/%@",printFileName];
    [context writeToFile:printfPath atomically:NO encoding:NSUTF8StringEncoding error:nil];

需要修改加密Plist文件gameJudgeLogFileName的值；


